#pragma once
/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class ChipmunkJava_Shapes__Transform */

#ifndef _Included_ChipmunkJava_Shapes__Transform
#define _Included_ChipmunkJava_Shapes__Transform
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    init
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ChipmunkJava_Shapes__1Transform_init
  (JNIEnv *, jclass);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    _new
 * Signature: (DDDDDD)J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Shapes__1Transform__1new
  (JNIEnv *, jclass, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    _clone
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Shapes__1Transform__1clone
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    free
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ChipmunkJava_Shapes__1Transform_free
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    getA
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_ChipmunkJava_Shapes__1Transform_getA
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    getB
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_ChipmunkJava_Shapes__1Transform_getB
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    getC
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_ChipmunkJava_Shapes__1Transform_getC
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    getD
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_ChipmunkJava_Shapes__1Transform_getD
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    getTX
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_ChipmunkJava_Shapes__1Transform_getTX
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    getTY
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_ChipmunkJava_Shapes__1Transform_getTY
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    setA
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_ChipmunkJava_Shapes__1Transform_setA
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    setB
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_ChipmunkJava_Shapes__1Transform_setB
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    setC
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_ChipmunkJava_Shapes__1Transform_setC
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    setD
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_ChipmunkJava_Shapes__1Transform_setD
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    setTX
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_ChipmunkJava_Shapes__1Transform_setTX
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    setTY
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_ChipmunkJava_Shapes__1Transform_setTY
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    _invert
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Shapes__1Transform__1invert
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    _mult
 * Signature: (LChipmunkJava/Shapes/_Transform;)J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Shapes__1Transform__1mult
  (JNIEnv *, jobject, jobject);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    _rigidInvert
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Shapes__1Transform__1rigidInvert
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    _transformBB
 * Signature: (LChipmunkJava/_BB;)J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Shapes__1Transform__1transformBB
  (JNIEnv *, jobject, jobject);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    _transformPoint
 * Signature: (LChipmunkJava/_Vect;)J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Shapes__1Transform__1transformPoint
  (JNIEnv *, jobject, jobject);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    _transformVect
 * Signature: (LChipmunkJava/_Vect;)J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Shapes__1Transform__1transformVect
  (JNIEnv *, jobject, jobject);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    _transpose
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Shapes__1Transform__1transpose__
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    _axialScale
 * Signature: (LChipmunkJava/_Vect;LChipmunkJava/_Vect;D)J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Shapes__1Transform__1axialScale
  (JNIEnv *, jclass, jobject, jobject, jdouble);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    _boneScale
 * Signature: (LChipmunkJava/_Vect;LChipmunkJava/_Vect;)J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Shapes__1Transform__1boneScale
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    _ortho
 * Signature: (LChipmunkJava/_BB;)J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Shapes__1Transform__1ortho
  (JNIEnv *, jclass, jobject);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    _rigid
 * Signature: (LChipmunkJava/_Vect;D)J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Shapes__1Transform__1rigid
  (JNIEnv *, jclass, jobject, jdouble);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    _rotate
 * Signature: (D)J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Shapes__1Transform__1rotate
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    _scale
 * Signature: (DD)J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Shapes__1Transform__1scale
  (JNIEnv *, jclass, jdouble, jdouble);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    _translate
 * Signature: (LChipmunkJava/_Vect;)J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Shapes__1Transform__1translate
  (JNIEnv *, jclass, jobject);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    _transpose
 * Signature: (DDDDDD)J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Shapes__1Transform__1transpose__DDDDDD
  (JNIEnv *, jclass, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    _wrap
 * Signature: (LChipmunkJava/Shapes/_Transform;LChipmunkJava/Shapes/_Transform;)J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Shapes__1Transform__1wrap
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     ChipmunkJava_Shapes__Transform
 * Method:    _wrapInverse
 * Signature: (LChipmunkJava/Shapes/_Transform;LChipmunkJava/Shapes/_Transform;)J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Shapes__1Transform__1wrapInverse
  (JNIEnv *, jclass, jobject, jobject);

#ifdef __cplusplus
}
#endif
#endif
