#pragma once
/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class ChipmunkJava_Shapes_Shape */

#ifndef _Included_ChipmunkJava_Shapes_Shape
#define _Included_ChipmunkJava_Shapes_Shape
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    init
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Shapes_Shape_init
  (JNIEnv *, jclass);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    free
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ChipmunkJava_Shapes_Shape_free
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    isSensor
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_ChipmunkJava_Shapes_Shape_isSensor
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    configSensor
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_ChipmunkJava_Shapes_Shape_configSensor
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    _pointQuery
 * Signature: ([D)J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Shapes_Shape__1pointQuery
  (JNIEnv *, jobject, jdoubleArray);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    _pointQueryDistance
 * Signature: ([D)D
 */
JNIEXPORT jdouble JNICALL Java_ChipmunkJava_Shapes_Shape__1pointQueryDistance
  (JNIEnv *, jobject, jdoubleArray);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    _segmentQuery
 * Signature: ([D[DD)J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Shapes_Shape__1segmentQuery
  (JNIEnv *, jobject, jdoubleArray, jdoubleArray, jdouble);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    _segmentQueryMatch
 * Signature: ([D[DD)Z
 */
JNIEXPORT jboolean JNICALL Java_ChipmunkJava_Shapes_Shape__1segmentQueryMatch
  (JNIEnv *, jobject, jdoubleArray, jdoubleArray, jdouble);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    _cacheBB
 * Signature: ()[D
 */
JNIEXPORT jdoubleArray JNICALL Java_ChipmunkJava_Shapes_Shape__1cacheBB
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    _update
 * Signature: ([D)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_ChipmunkJava_Shapes_Shape__1update
  (JNIEnv *, jobject, jdoubleArray);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    getArea
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_ChipmunkJava_Shapes_Shape_getArea
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    _getBB
 * Signature: ()[D
 */
JNIEXPORT jdoubleArray JNICALL Java_ChipmunkJava_Shapes_Shape__1getBB
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    _getBody
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Shapes_Shape__1getBody
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    _getCenterOfGravity
 * Signature: ()[D
 */
JNIEXPORT jdoubleArray JNICALL Java_ChipmunkJava_Shapes_Shape__1getCenterOfGravity
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    _getCollisionType
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Shapes_Shape__1getCollisionType
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    _getContactPointSet
 * Signature: (LChipmunkJava/Shapes/Shape;)J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Shapes_Shape__1getContactPointSet
  (JNIEnv *, jobject, jobject);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    getDensity
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_ChipmunkJava_Shapes_Shape_getDensity
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    getElasticity
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_ChipmunkJava_Shapes_Shape_getElasticity
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    _getFilter
 * Signature: ()[J
 */
JNIEXPORT jlongArray JNICALL Java_ChipmunkJava_Shapes_Shape__1getFilter
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    getFriction
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_ChipmunkJava_Shapes_Shape_getFriction
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    getMass
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_ChipmunkJava_Shapes_Shape_getMass
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    getMoment
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_ChipmunkJava_Shapes_Shape_getMoment
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    _getSpace
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Shapes_Shape__1getSpace
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    _getSurfaceVelocity
 * Signature: ()[D
 */
JNIEXPORT jdoubleArray JNICALL Java_ChipmunkJava_Shapes_Shape__1getSurfaceVelocity
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    setBody
 * Signature: (LChipmunkJava/Body;)V
 */
JNIEXPORT void JNICALL Java_ChipmunkJava_Shapes_Shape_setBody
  (JNIEnv *, jobject, jobject);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    setCollisionType
 * Signature: (LChipmunkJava/Collisions/CollisionType;)V
 */
JNIEXPORT void JNICALL Java_ChipmunkJava_Shapes_Shape_setCollisionType
  (JNIEnv *, jobject, jobject);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    setDensity
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_ChipmunkJava_Shapes_Shape_setDensity
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    setElasticity
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_ChipmunkJava_Shapes_Shape_setElasticity
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    setFilter
 * Signature: (LChipmunkJava/Collisions/ShapeFilter;)V
 */
JNIEXPORT void JNICALL Java_ChipmunkJava_Shapes_Shape_setFilter
  (JNIEnv *, jobject, jobject);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    setFriction
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_ChipmunkJava_Shapes_Shape_setFriction
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    setMass
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_ChipmunkJava_Shapes_Shape_setMass
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     ChipmunkJava_Shapes_Shape
 * Method:    _setSurfaceVelocity
 * Signature: ([D)V
 */
JNIEXPORT void JNICALL Java_ChipmunkJava_Shapes_Shape__1setSurfaceVelocity
  (JNIEnv *, jobject, jdoubleArray);

#ifdef __cplusplus
}
#endif
#endif
