#pragma once
/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class ChipmunkJava_Shapes_PolyShape */

#ifndef _Included_ChipmunkJava_Shapes_PolyShape
#define _Included_ChipmunkJava_Shapes_PolyShape
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     ChipmunkJava_Shapes_PolyShape
 * Method:    init
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ChipmunkJava_Shapes_PolyShape_init
  (JNIEnv *, jclass);

/*
 * Class:     ChipmunkJava_Shapes_PolyShape
 * Method:    _new
 * Signature: (LChipmunkJava/Body;[DD)J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Shapes_PolyShape__1new
  (JNIEnv *, jclass, jobject, jdoubleArray, jdouble);

/*
 * Class:     ChipmunkJava_Shapes_PolyShape
 * Method:    _new2
 * Signature: (LChipmunkJava/Body;[D[DD)J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Shapes_PolyShape__1new2
  (JNIEnv *, jclass, jobject, jdoubleArray, jdoubleArray, jdouble);

/*
 * Class:     ChipmunkJava_Shapes_PolyShape
 * Method:    _newBox
 * Signature: (LChipmunkJava/Body;DDD)J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Shapes_PolyShape__1newBox
  (JNIEnv *, jclass, jobject, jdouble, jdouble, jdouble);

/*
 * Class:     ChipmunkJava_Shapes_PolyShape
 * Method:    _clone
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Shapes_PolyShape__1clone
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes_PolyShape
 * Method:    getCount
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_ChipmunkJava_Shapes_PolyShape_getCount
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes_PolyShape
 * Method:    getRadius
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_ChipmunkJava_Shapes_PolyShape_getRadius
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes_PolyShape
 * Method:    _getVertex
 * Signature: (I)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_ChipmunkJava_Shapes_PolyShape__1getVertex
  (JNIEnv *, jobject, jint);

/*
 * Class:     ChipmunkJava_Shapes_PolyShape
 * Method:    _getVertices
 * Signature: ()[D
 */
JNIEXPORT jdoubleArray JNICALL Java_ChipmunkJava_Shapes_PolyShape__1getVertices
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Shapes_PolyShape
 * Method:    setRadius
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_ChipmunkJava_Shapes_PolyShape_setRadius
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     ChipmunkJava_Shapes_PolyShape
 * Method:    _setVertices
 * Signature: ([D)V
 */
JNIEXPORT void JNICALL Java_ChipmunkJava_Shapes_PolyShape__1setVertices___3D
  (JNIEnv *, jobject, jdoubleArray);

/*
 * Class:     ChipmunkJava_Shapes_PolyShape
 * Method:    _setVertices
 * Signature: ([D[D)V
 */
JNIEXPORT void JNICALL Java_ChipmunkJava_Shapes_PolyShape__1setVertices___3D_3D
  (JNIEnv *, jobject, jdoubleArray, jdoubleArray);

#ifdef __cplusplus
}
#endif
#endif
