#pragma once
/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class ChipmunkJava_Constraints_RotaryLimitJoint */

#ifndef _Included_ChipmunkJava_Constraints_RotaryLimitJoint
#define _Included_ChipmunkJava_Constraints_RotaryLimitJoint
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     ChipmunkJava_Constraints_RotaryLimitJoint
 * Method:    init
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ChipmunkJava_Constraints_RotaryLimitJoint_init
  (JNIEnv *, jclass);

/*
 * Class:     ChipmunkJava_Constraints_RotaryLimitJoint
 * Method:    _new
 * Signature: (LChipmunkJava/Body;LChipmunkJava/Body;DD)J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Constraints_RotaryLimitJoint__1new
  (JNIEnv *, jclass, jobject, jobject, jdouble, jdouble);

/*
 * Class:     ChipmunkJava_Constraints_RotaryLimitJoint
 * Method:    _clone
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_ChipmunkJava_Constraints_RotaryLimitJoint__1clone
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Constraints_RotaryLimitJoint
 * Method:    getMax
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_ChipmunkJava_Constraints_RotaryLimitJoint_getMax
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Constraints_RotaryLimitJoint
 * Method:    getMin
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_ChipmunkJava_Constraints_RotaryLimitJoint_getMin
  (JNIEnv *, jobject);

/*
 * Class:     ChipmunkJava_Constraints_RotaryLimitJoint
 * Method:    setMax
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_ChipmunkJava_Constraints_RotaryLimitJoint_setMax
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     ChipmunkJava_Constraints_RotaryLimitJoint
 * Method:    setMin
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_ChipmunkJava_Constraints_RotaryLimitJoint_setMin
  (JNIEnv *, jobject, jdouble);

#ifdef __cplusplus
}
#endif
#endif
